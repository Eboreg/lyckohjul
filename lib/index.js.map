{"version":3,"file":"index.js","mappings":"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","sources":["webpack://lyckohjul/./src/wheel.ts","webpack://lyckohjul/webpack/bootstrap","webpack://lyckohjul/./src/index.ts"],"sourcesContent":["export interface Footnote {\n    number: number;\n    text: string;\n}\n\nexport class Wheel {\n    readonly wheel: HTMLElement;\n    readonly spinButton: HTMLButtonElement;\n    readonly mao: Element | null;\n    readonly spinnnnAudio = new Audio(\"assets/SPINNNNN.wav\");\n    readonly wheelAudio = new Audio(\"assets/wheel.wav\");\n    readonly id: string;\n    readonly navButtons: Element;\n    readonly name: string;\n    readonly sliceColors: string[];\n    readonly footnotes: Element;\n    readonly overlay: HTMLElement;\n    readonly slices: HTMLElement[] = [];\n    readonly errors: Element;\n\n    currentRotation: number = 0;\n    currentTopSlice?: HTMLElement;\n\n    constructor(id: string, name: string, slices: string[]) {\n        const html = `\n        <div class=\"container-overlay\"></div>\n        <div class=\"left-margin\">\n            <div class=\"nav-buttons\"></div>\n            <div class=\"footnotes\"></div>\n            <div class=\"errors\"></div>\n        </div>\n        <div class=\"arrow-container\"><div class=\"arrow\"></div></div>\n        <div class=\"wheel-container\">\n            <div class=\"wheel\"></div>\n            <img src=\"assets/mao-128px.png\" alt=\"\" class=\"mao\">\n        </div>\n        <button class=\"spin-button\">SPINNNNNNN!</button>`;\n        const container = document.createElement(\"div\");\n        const anchor = document.createElement(\"div\");\n\n        anchor.id = id;\n        container.className = \"container\";\n        container.innerHTML = html;\n        document.body.appendChild(anchor);\n        document.body.appendChild(container);\n\n        if (slices.length % 2 == 0 && slices.length > 4) this.sliceColors = [\"red\", \"blue\"];\n        else if ((slices.length - 1) % 3 != 0 && slices.length > 5)\n            this.sliceColors = [\"red\", \"blue\", \"darkgreen\"];\n        else if ((slices.length - 1) % 4 != 0)\n            this.sliceColors = [\"red\", \"blue\", \"darkgreen\", \"darkmagenta\"];\n        else this.sliceColors = [\"red\", \"blue\", \"darkred\", \"darkgreen\", \"darkmagenta\"];\n\n        this.name = name;\n        this.wheel = container.querySelector(\".wheel\") as HTMLElement;\n        this.spinButton = container.querySelector(\".spin-button\") as HTMLButtonElement;\n        this.mao = container.querySelector(\".mao\");\n        this.navButtons = container.querySelector(\".nav-buttons\") as Element;\n        this.footnotes = container.querySelector(\".footnotes\") as Element;\n        this.id = id;\n        this.spinButton.addEventListener(\"click\", () => { this.spin() });\n        this.overlay = container.querySelector(\".container-overlay\") as HTMLElement;\n        this.errors = container.querySelector(\".errors\") as Element;\n\n        if (slices.length < 5) {\n            this.addError(\"We need at least 5 slices at the moment.\");\n        } else {\n            for (let i = 0; i < slices.length; i++) {\n                this.addSlice(slices[i], i, slices.length);\n            }\n            this.currentTopSlice = this.slices[0];\n        }\n    }\n\n    addError(text: string) {\n        const elem = document.createElement(\"p\");\n        elem.textContent = text;\n        this.errors.appendChild(elem);\n        this.errors.classList.add(\"show\");\n    }\n\n    addFootnotes(footnotes: Footnote[]): Wheel {\n        for (const footnote of footnotes) {\n            const elem = document.createElement(\"p\");\n            const sup = document.createElement(\"sup\");\n            const span = document.createElement(\"span\");\n            sup.textContent = footnote.number.toString();\n            span.textContent = footnote.text;\n            elem.appendChild(sup);\n            elem.appendChild(span);\n            elem.classList.add(\"footnote\");\n            this.footnotes.appendChild(elem);\n        }\n        return this;\n    }\n\n    addNavButtons(buttons: HTMLButtonElement[]): Wheel {\n        for (const button of buttons.map((b) => b.cloneNode(true) as HTMLButtonElement)) {\n            const wheelId = button.dataset.wheel!;\n\n            if (wheelId == this.id) button.classList.add(\"active\");\n            else button.addEventListener(\"click\", () => { location.hash = `#${wheelId}` });\n            this.navButtons.appendChild(button);\n        }\n        return this;\n    }\n\n    getNavButton(): HTMLButtonElement {\n        const button = document.createElement(\"button\");\n\n        button.dataset.wheel = this.id;\n        button.textContent = this.name;\n        return button;\n    }\n\n    addSlice(text: string, index: number, totalSliceCount: number): Wheel {\n        const turnsPerSlice = 1 / totalSliceCount;\n        const rotation = turnsPerSlice * index;\n        const slice = document.createElement(\"div\");\n        const label = document.createElement(\"div\");\n        const labelText = document.createElement(\"span\");\n        const diameter = this.wheel.clientHeight;\n        const radius = diameter / 2;\n        const A = 360 * turnsPerSlice; // angle closest to the wheel centre\n        const B = 180 - 90 - A;\n        const b = radius;\n        // length of outermost side of this slice if it was a right triangle:\n        const a = b * Math.tan(this.radians(A));\n        // length of straight line between the slice's two outer edges:\n        const innerWidth = 2 * b * Math.sin(this.radians(A / 2));\n        // length of straight line from center to previous straight line:\n        const innerLength = b * Math.cos(this.radians(A / 2));\n        const textAngle = -(90 + A / 2);\n        const textLeft = -(innerWidth / 4) - 2;\n        let p4: number[];\n\n        if (a > radius) {\n            const a2 = a - radius;\n            const b2 = a2 * Math.tan(this.radians(B));\n            const b2percent = (b2 / diameter) * 100;\n            p4 = [0, b2percent];\n        } else {\n            const apercent = (50 * (radius - a)) / radius;\n            p4 = [apercent, 0];\n        }\n\n        slice.className = \"slice\";\n        slice.style.clipPath = `polygon(0% 0%, 50% 0%, 50% 50%, ${p4[0]}% ${p4[1]}%)`;\n        slice.style.transform = `rotate(${rotation}turn)`;\n        slice.style.backgroundColor = this.sliceColors[index % this.sliceColors.length];\n\n        label.className = \"slice-label\";\n        if (totalSliceCount > 30) label.classList.add(\"small\");\n        label.style.transform = `rotate(${textAngle}deg)`;\n        label.style.left = `${textLeft}px`;\n        label.style.width = `${innerLength}px`;\n\n        labelText.innerHTML = text;\n\n        label.appendChild(labelText);\n        slice.appendChild(label);\n        this.wheel.appendChild(slice);\n        this.slices.push(slice);\n\n        return this;\n    }\n\n    getNextRotation(): number {\n        // Make sure it doesn't stop too close to a slice border.\n        const turnsPerSlice = 1 / this.slices.length;\n        let rotation: number;\n        let turnsFromSliceStart: number;\n        let turnsFromSliceEnd: number;\n\n        do {\n            rotation = (Math.random() * 10) + 7;\n            turnsFromSliceStart = (rotation + this.currentRotation) % turnsPerSlice;\n            turnsFromSliceEnd = turnsPerSlice - turnsFromSliceStart;\n        } while (turnsFromSliceStart < 0.002 || turnsFromSliceEnd < 0.002);\n\n        return rotation + this.currentRotation;\n    }\n\n    spin() {\n        const turnsPerSlice = 1 / this.slices.length;\n        const rotation = this.getNextRotation();\n        const nextTopSliceIdx =\n            (this.slices.length - Math.floor((rotation / turnsPerSlice) % this.slices.length)) % this.slices.length;\n        const duration = 13000;\n        const keyframes = [\n            { transform: `rotate(${this.currentRotation}turn)`, easing: \"cubic-bezier(0.1, 0.2, 0.2, 1.02)\" },\n            { transform: `rotate(${rotation}turn)` },\n        ];\n\n        this.currentTopSlice?.classList.remove(\"top\");\n        this.overlay.style.display = \"block\";\n        void this.wheelAudio.play();\n        void this.spinnnnAudio.play();\n\n        this.wheel.animate(keyframes, { duration: duration, fill: \"both\" })\n            .onfinish = () => {\n                this.overlay.style.display = \"none\";\n                this.currentRotation = rotation;\n                this.currentTopSlice = this.slices[nextTopSliceIdx];\n                this.currentTopSlice.classList.add(\"top\");\n                this.spinnnnAudio.load();\n                this.wheelAudio.load();\n            };\n        if (this.mao != null) this.mao.animate(keyframes, { duration: duration + 2000, fill: \"both\" });\n    }\n\n    radians(degrees: number): number {\n        return (degrees * Math.PI) / 180;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Wheel } from \"./wheel\";\n\nfunction shuffleArray(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nwindow.onload = () => {\n    const url = new URL(location.href);\n\n    if (url.hash) {\n        url.hash = \"\";\n        location.href = url.href;\n    }\n\n    const wheels: Wheel[] = [];\n    const geografi = [\n        \"Svealand\",\n        \"Norrland\",\n        \"Götaland\",\n        \"Norge/Danmark/Island\",\n        \"Finland/Baltikum\",\n        \"Tyskland/Österrike/Schweiz\",\n        \"Frankrike & Benelux\",\n        \"England\",\n        \"Irland/Skottland/Wales\",\n        \"Spanien/Portugal/Italien\",\n        \"Balkan<sup>4</sup>\",\n        \"Turkiet\",\n        \"Polen/Tjeckien/Slovakien\",\n        \"Ungern/Rumänien/Bulgarien\",\n        \"Ryssland/Ukraina/Vitryssland\",\n        \"Iran/Kaukasus\",\n        \"Arabvärlden & Israel\",\n        \"Centralasien<sup>2</sup> & Mongoliet\",\n        \"Indiska subkontinenten<sup>1</sup>\",\n        \"Kina/Hongkong/Taiwan\",\n        \"Sydostasien\",\n        \"Japan/Korea\",\n        \"Indonesien/Filippinerna\",\n        \"Oceanien<sup>3</sup>\",\n        \"Kanada\",\n        \"USA: Västkust\",\n        \"USA: Mellanvästern\",\n        \"USA: Södern\",\n        \"USA: Östkust\",\n        \"Centralamerika/Mexiko\",\n        \"Karibien\",\n        \"Sydamerika\",\n        \"Nordafrika\",\n        \"Västafrika\",\n        \"Södra Afrika\",\n        \"Östafrika\",\n    ];\n    const tider = [\n        \"1945 - 1949\",\n        \"1950 - 1954\",\n        \"1955 - 1959\",\n        \"1960 - 1964\",\n        \"1965 - 1969\",\n        \"1970 - 1974\",\n        \"1975 - 1979\",\n        \"1980 - 1984\",\n        \"1985 - 1989\",\n        \"1990 - 1994\",\n        \"1995 - 1999\",\n        \"2000 - 2004\",\n        \"2005 - 2009\",\n        \"2010 - 2014\",\n        \"2015 - 2019\",\n        \"2020 - 2024\",\n    ];\n\n    shuffleArray(geografi);\n    shuffleArray(tider);\n\n    wheels.push(\n        new Wheel(\"geografi\", \"Geografi\", geografi)\n            .addFootnotes([\n                { number: 1, text: \"Indien, Pakistan, Bangladesh, Nepal, Bhutan, Sri Lanka\" },\n                { number: 2, text: \"Afghanistan, Turkmenistan, Uzbekistan, Tadzjikistan, Kirgizistan, Kazakstan\" },\n                { number: 3, text: \"Inkl. Australien, Nya Zeeland & Hawaii\" },\n                { number: 4, text: \"F.d. Jugoslavien, Grekland, Albanien\" },\n            ]),\n        new Wheel(\"tid\", \"Tid\", tider),\n    );\n\n    const navButtons = wheels.map((wheel) => wheel.getNavButton());\n\n    wheels.forEach((wheel) => { wheel.addNavButtons(navButtons) });\n};\n"],"names":[],"sourceRoot":""}